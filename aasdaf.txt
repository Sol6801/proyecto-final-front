'use client';

import { useRouter } from "next/navigation";
import withAuth from "@/components/withAuth.js";
import LikedItemsChart from "@/components/result.js";
import DecisionManager from "@/components/decision.js";

const API_URL = process.env.NEXT_PUBLIC_API_URL;

const DecisionPage = ({ params }) => {
  const router = useRouter();
  const { eventId } = params;

  const goToEvent = () => {
    router.push(`/events/${eventId}`);
  };

  const handleIA = () => {
    router.push(`/events/${eventId}/result/ia`);
  };

  const handleDecision = async () => {

    try {
      const currentItem = items[currentIndex];
      const response = await fetch(
        `${API_URL}/events/${eventId}/${category}/liked`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            userId,
            eventId,
            itemId: currentItem.id,
            itemName: currentItem.name,
            itemImage: currentItem.urlImage,
            category: category,
          }),
        }
      );

      const data = await response.json();
      console.log(`${category} liked:`, data);
      handleNext();
    } catch (error) {
      console.error(`Error saving ${category} like:`, error);
    }
    

  };

  
   return (
    <section>
      
      <DecisionManager eventId={eventId} />
    <section className="h-full min-h-screen bg-violet-400 flex flex-row rounded-lg relative justify-evenly">
        <LikedItemsChart eventId={eventId} category={'movies'}/>
        <LikedItemsChart eventId={eventId} category={'meals'}/>
        <LikedItemsChart eventId={eventId} category={'places'}/>
        </section>
      <div className="flex flex-row items-center justify-center gap-8 py-8">
            <button
              onClick={goToEvent}
              className="bg-white text-violet-600 px-6 py-3 rounded-full text-lg font-semibold hover:bg-gray-100"
            >
              Volver al Evento
            </button>
            <button
              onClick={handleDecision}
              className="bg-white text-violet-600 px-6 py-3 rounded-full text-lg font-semibold hover:bg-gray-100"
            >
              Listo!
            </button>
            <button
              onClick={handleIA}
              className="bg-white text-violet-600 px-6 py-3 rounded-full text-lg font-semibold hover:bg-gray-100"
            >
             GenerÃ¡ tu recomendaciÃ³n con IA ðŸŒŸ
            </button>

          </div>
      </section>
  );
};

export default withAuth(DecisionPage);